import requests
import threading


API_ENDPOINT = 'http://192.168.100.10/api/scenario/320/0/get_resources/'

API_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDEzNDI3MDcsImlhdCI6MTcwMTM0MDkwNywic2NvcGUiOiJhY2Nlc3NfdG9rZW4iLCJkYXRhIjp7InVzZXJfaWQiOjEsInVzZXJfdHlwZSI6MCwidXNlcm5hbWUiOiJzdUBzaWduYWwuY29tIiwidXNlcl90eXBlX3RleHQiOiJBZG1pbiIsIm1lbnUiOlt7InRpdGxlIjoiU3lzdGVtIiwiY2hpbGRyZW4iOlt7InRpdGxlIjoiVXNlcnMiLCJ1cmwiOiIvdXNlcnMiLCJpY29uIjoidXNlciIsImtleSI6IjAtMC0wIn0seyJ0aXRsZSI6Ikluc3RydWN0b3IiLCJ1cmwiOiIvdHJhaW5lcnMiLCJpY29uIjoidHJhaW5lcnMiLCJrZXkiOiIwLTAtMSJ9LHsidGl0bGUiOiJTdHVkZW50cyIsInVybCI6Ii9zdHVkZW50cyIsImljb24iOiJzdHVkZW50cyIsImtleSI6IjAtMC0yIn0seyJ0aXRsZSI6IlBlcm1pc3Npb25zIiwidXJsIjoiL3Blcm1pc3Npb25zIiwiaWNvbiI6InBlcm1pc3Npb25zIiwia2V5IjoiMC0wLTMifSx7InRpdGxlIjoiQWNjb3VudCBTZXR0aW5ncyIsInVybCI6Ii9hY2NvdW50X3NldHRpbmdzIiwiaWNvbiI6ImVmZmVjdCIsImtleSI6IjAtMC00In1dLCJpY29uIjoic3lzdGVtIiwia2V5IjoiMC0wIn0seyJ0aXRsZSI6IkVxdWlwbWVudHMiLCJjaGlsZHJlbiI6W3sidGl0bGUiOiJEZXZpY2UgTWFudWZhY3R1cmVyIiwidXJsIjoiL2RldmljZV9tYW51ZmFjdHVyZXIiLCJpY29uIjoiZGV2aWNlTWVudWZhY3R1cmVyIiwia2V5IjoiMC0xLTAifSx7InRpdGxlIjoiQWNjZXNzb3JpZXMiLCJjaGlsZHJlbiI6W3sidGl0bGUiOiJQb3dlciBTb3VyY2UiLCJ1cmwiOiIvcG93ZXJfc291cmNlIiwiaWNvbiI6InBvd2VyU291cmNlIiwia2V5IjoiMC0xLTEtMCJ9LHsidGl0bGUiOiJBbnRlbm5hcyIsInVybCI6Ii9hbnRlbm5hcyIsImljb24iOiJhbnRlbm5hcyIsImtleSI6IjAtMS0xLTEifV0sImljb24iOiJlcXVpcEFjYyIsImtleSI6IjAtMS0xIn0seyJ0aXRsZSI6IldpcmVsZXNzIiwiY2hpbGRyZW4iOlt7InRpdGxlIjoiV2lyZWxlc3MgRXF1aXBtZW50cyIsInVybCI6Ii93bF9jb21tX2VxdWlwX291dGxpbmVzIiwiaWNvbiI6IndsT3V0bGluZSIsImtleSI6IjAtMS0yLTAifSx7InRpdGxlIjoiRXF1aXBtZW50cyBMaXN0IiwidXJsIjoiL3dsX2VxdWlwbWVudHMiLCJpY29uIjoiZXF1aXBtZW50cyIsImtleSI6ImVxdWlwbWVudHMifSx7InRpdGxlIjoiQWRkIEVxdWlwbWVudCIsInVybCI6Ii93bF9lcXVpcG1lbnRzL2FkZCIsImljb24iOiJhZGRFcXVpcG1lbnQiLCJrZXkiOiIwLTEtMi0xIn1dLCJpY29uIjoibWFwIiwia2V5IjoiMC0xLTIifSx7InRpdGxlIjoiV2lyZWQiLCJjaGlsZHJlbiI6W3sidGl0bGUiOiJUb29scyIsInVybCI6Ii93aXJlX3Rvb2xzIiwiaWNvbiI6IndyZF9tb2RlbCIsImtleSI6IjAtMS0zLTAifSx7InRpdGxlIjoiQnJhbmQiLCJ1cmwiOiIvd2lyZV9icmFuZCIsImljb24iOiJ3cmRfbW9kZWwiLCJrZXkiOiIwLTEtMy0xIn0seyJ0aXRsZSI6Ik1vZGVsIiwidXJsIjoiL3dpcmVfbW9kZWwiLCJpY29uIjoid3JkX21vZGVsIiwia2V5IjoiMC0xLTMtMiJ9LHsidGl0bGUiOiJFcXVpcG1lbnRzIExpc3QiLCJ1cmwiOiIvd2lyZV9jb21tX2VxdWlwbWVudHMiLCJpY29uIjoid3JkX2VxdWlwbWVudHMiLCJrZXkiOiIwLTEtMy0zIn0seyJ0aXRsZSI6IkFkZCBFcXVpcG1lbnQiLCJ1cmwiOiIvd2lyZV9jb21tX2VxdWlwbWVudHMvYWRkIiwiaWNvbiI6ImFkZEVxdWlwbWVudCIsImtleSI6IjAtMS0zLTQifV0sImljb24iOiJtYXAiLCJrZXkiOiIwLTEtMyJ9XSwiaWNvbiI6Im1hcCIsImtleSI6IjAtMSJ9LHsidGl0bGUiOiJFZmZlY3RzIiwiY2hpbGRyZW4iOlt7InRpdGxlIjoiTmF0dXJhbCBFZmZlY3QiLCJ1cmwiOiIvc2V0dGluZ3MiLCJpY29uIjoiYXJ0aWZpY2lhbCIsImtleSI6IjAtMi0wIn0seyJ0aXRsZSI6IkRldmljZSBTZXR0aW5ncyIsInVybCI6Ii9oZl9yYWRpbyIsImljb24iOiJkZXZpY2UiLCJrZXkiOiIwLTItMSJ9XSwiaWNvbiI6ImVmZmVjdCIsImtleSI6IjAtMiJ9LHsidGl0bGUiOiJUcmFpbmluZyIsImNoaWxkcmVuIjpbeyJ0aXRsZSI6IkNvdXJzZSBMaXN0IiwidXJsIjoiL2NvdXJzZXMiLCJpY29uIjoiY291cnNlIiwia2V5IjoiMC0zLTAifSx7InRpdGxlIjoiQWN0aXZlIENvdXJzZXMiLCJ1cmwiOiIvYWN0aXZlX2NvdXJzZXMiLCJpY29uIjoiYWN0aXZlQ291cnNlIiwia2V5IjoiMC0zLTEifSx7InRpdGxlIjoiU2NlbmFyaW9zIiwidXJsIjoiL3NjZW5hcmlvcyIsImljb24iOiJhY3RpdmVDb3Vyc2UiLCJrZXkiOiIwLTMtMiJ9LHsidGl0bGUiOiJUcmFpbmluZyIsInVybCI6Ii90cmFpbmluZyIsImljb24iOiJpbmRpdmlkdWFsIiwia2V5IjoiMC0zLTMifSx7InRpdGxlIjoiRGV2aWNlIFVzZXMiLCJ1cmwiOiIvZGV2aWNlX3VzZXMiLCJpY29uIjoiaW5kaXZpZHVhbCIsImtleSI6IjAtMy00In0seyJ0aXRsZSI6IkNvbXBhcmlzaW9uIFJlcG9ydCIsInVybCI6Ii9jb21wYXJpc2lvbl9yZXBvcnQiLCJpY29uIjoiaW5kaXZpZHVhbCIsImtleSI6IjAtMy01In1dLCJpY29uIjoidHJhaW5pbmciLCJrZXkiOiIwLTMifV19fQ.ECoqhMfr9hA2L6kXCvFyoaJuhlASftY-C2saIsYEsws'

# Number of concurrent requests
NUM_REQUESTS = 1000

# Barrier token to synchronize threads
barrier = threading.Barrier(NUM_REQUESTS)

    
def api_request(index):
    print(f"Thread {index} started")
    
    # Replace 'Authorization' with the actual header key required for token authentication
    headers = {'Authorization': f'Bearer {API_TOKEN}'}

    # Make the API request
    response = requests.get(API_ENDPOINT, headers=headers)
    # print(response)
    # Synchronize threads at the barrier
    barrier.wait()
    
    success = 0
    failed = 0
    if response.status_code ==200:
        print(f"Thread {index} completed with status code: {response.status_code}")
        success = success + 1
    else:
        print(f"Thread {index} failed status code: {response.status_code}")
        failed =  failed + 1  
    # print(F'Total Result: success > {success}: failed>{failed}')
        

# Create and start threads
threads = []
for i in range(NUM_REQUESTS):
    thread = threading.Thread(target=api_request, args=(i,))
    thread.start()
    threads.append(thread)

# Wait for all threads to complete
for thread in threads:
    thread.join()

print("All threads have completed.")

